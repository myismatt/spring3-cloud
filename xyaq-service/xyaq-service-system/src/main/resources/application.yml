server:
  port: 30430
  # 下面是配置undertow作为服务器的参数
  undertow:
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    # 是否分配的直接内存
    direct-buffers: true
    threads:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      io: 4
      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
      worker: 20
spring:
  application:
    name: xyaq-service-system
  profiles:
    active: dev
  datasource:
    # 指定为HikariDataSource
    type: com.zaxxer.hikari.HikariDataSource
    # hikari连接池配置
    hikari:
      #连接池名
      pool-name: HikariCP
      #最小空闲连接数
      minimum-idle: 5
      # 空闲连接存活最大时间，默认10分钟
      idle-timeout: 600000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒
      connection-timeout: 30000
      # 连接测试query
      connection-test-query: SELECT 1
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.200.103:8848
        namespace: matt
        username: nacos
        password: nacos

# Mybatis Plus配置
mybatis-plus:
  mapper-package: com.hk.**.dao
  # 对应的 XML 文件位置
  mapper-locations: classpath*:mapper/*Mapper.xml
  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查
  check-config-location: false
  configuration:
    #Mybatis二级缓存
    cache-enabled: false
    #开启驼峰命名
    map-underscore-to-camel-case: true
    # MyBatis 自动映射策略
    # NONE：不启用 PARTIAL：只对非嵌套 resultMap 自动映射 FULL：对所有 resultMap 自动映射
    autoMappingBehavior: PARTIAL
    # MyBatis 自动映射时未知列或未知属性处理策
    # NONE：不做处理 WARNING：打印相关警告 FAILING：抛出异常和详细信息
    autoMappingUnknownColumnBehavior: NONE
    # 更详细的日志输出 会有性能损耗 org.apache.ibatis.logging.stdout.StdOutImpl
    # 关闭日志记录 (可单纯使用 p6spy 分析) org.apache.ibatis.logging.nologging.NoLoggingImpl
    # 默认日志输出 org.apache.ibatis.logging.slf4j.Slf4jImpl
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
    # 如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
  global-config:
    #关闭banner
    banner: false
    db-config:
      #主键类型
      id-type: ASSIGN_ID
      logic-delete-field: del
      # 逻辑已删除值
      logicDeleteValue: 1
      # 逻辑未删除值
      logicNotDeleteValue: 0
      # 字段验证策略之 insert,在 insert 的时候的字段验证策略
      # IGNORED 忽略 NOT_NULL 非NULL NOT_EMPTY 非空 DEFAULT 默认 NEVER 不加入 SQL
      insertStrategy: NOT_NULL
      # 字段验证策略之 update,在 update 的时候的字段验证策略
      updateStrategy: NOT_NULL
      # 字段验证策略之 select,在 select 的时候的字段验证策略既 wrapper 根据内部 entity 生成的 where 条件
      where-strategy: NOT_NULL

logging:
  level:
    root: info
  file:
    path: ./logs
  config: classpath:Spring-logback.xml

# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.hk.system
# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn
    enable-swagger-models: true
    enable-document-manage: true
    swagger-model-name: 实体类列表
    enable-footer: true
    enable-footer-custom: true
    footer-custom-content: Copyright © 2021-2023 HK. All Rights Reserved.
  documents:
    - group: default
      name: 系统管理


dubbo:
  application:
    id: ${spring.application.name}
    name: ${dubbo.application.id}
    qos-enable: true
    qos-port: 23334
    qos-accept-foreign-ip: false
  protocol:
    name: dubbo
    port: -1
  # 注册中心配置
  registry:
    address: nacos://${spring.cloud.nacos.discovery.server-addr}
    group: DUBBO_GROUP
    parameters:
      namespace: ${spring.cloud.nacos.discovery.namespace}
    username: ${spring.cloud.nacos.discovery.username}
    password: ${spring.cloud.nacos.discovery.password}
    enable-empty-protection: false
  # 消费者相关配置
  consumer:
    # 结果缓存(LRU算法)
    # 会有数据不一致问题 建议在注解局部开启
    cache: false
    # 支持校验注解
    validation: false
    # 超时时间
    timeout: 3000
    # 初始化检查
    check: false
  scan:
    # 接口实现类扫描
    base-packages: com.hk.**.service